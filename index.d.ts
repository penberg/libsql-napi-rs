/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface Options {
  timeout?: number
}
export interface RunResult {
  changes: number
  duration: number
  lastInsertRowid: number
}
export declare class Database {
  constructor(path: string, opts?: Options | undefined | null)
  prepare(sql: string): Statement
  transaction(func: (...args: any[]) => any): (...args: any[]) => any
  pragma(): void
  backup(): void
  serialize(): void
  function(): void
  aggregate(): void
  table(): void
  loadExtension(path: string): void
  maxWriteReplicationIndex(): void
  exec(sql: string): void
  interrupt(): void
  close(): void
  defaultSafeIntegers(toggle: boolean): void
  unsafeMode(): void
}
export declare class Statement {
  run(params?: unknown | undefined | null): RunResult
}
